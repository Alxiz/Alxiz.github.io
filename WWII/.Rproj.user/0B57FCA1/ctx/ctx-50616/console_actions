{
    "type": [
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        3,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2
    ],
    "data": [
        "\nR version 4.2.1 (2022-06-23) -- \"Funny-Looking Kid\"\nCopyright (C) 2022 The R Foundation for Statistical Computing\nPlatform: aarch64-apple-darwin20 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n[Workspace loaded from ~/WWII/.RData]\n\n",
        "Error in utils::download.file(paste0(\"http://localhost:\", port, \"/90B3C9E8-0DBC-4BC0-B164-AA2D5C031B28/\",  : \n  cannot open URL 'http://localhost:7289/90B3C9E8-0DBC-4BC0-B164-AA2D5C031B28/WWII_page.qmd'\n",
        "In addition: ",
        "Warning message:\n",
        "In utils::download.file(paste0(\"http://localhost:\", port, \"/90B3C9E8-0DBC-4BC0-B164-AA2D5C031B28/\",  :",
        "\n ",
        " URL 'http://localhost:7289/90B3C9E8-0DBC-4BC0-B164-AA2D5C031B28/WWII_page.qmd': status was 'Server returned nothing (no headers, no data)'\n",
        "Error rendering file : WWII_page.qmd\nError in utils::download.file(paste0(\"http://localhost:\", port, \"/90B3C9E8-0DBC-4BC0-B164-AA2D5C031B28/\",  : \n  cannot open URL 'http://localhost:7289/90B3C9E8-0DBC-4BC0-B164-AA2D5C031B28/WWII_page.qmd'\n\n",
        "> ",
        "shiny::runApp('MyShinyApp')",
        "Loading required package: shiny\n",
        "Error in parse(file, keep.source = FALSE, srcfile = src, encoding = enc) : \n  /Users/alysonxi/WWII/MyShinyApp/app.R:14:60: unexpected symbol\n13:   output$barplot <- renderPlot({\n14:     ggplot(data = your_dataset, aes(x = Country, y = Total death\n                                                               ^\n",
        "Possible missing comma at:\n14:    ggplot(data = your_dataset, aes(x = Country, y = Total death)) +\n                                                              ^\n",
        "Error in sourceUTF8(fullpath, envir = new.env(parent = sharedEnv)) : \n  Error sourcing /Users/alysonxi/WWII/MyShinyApp/app.R\n",
        "> ",
        "runApp('MyShinyApp')",
        "Warning in file(file, \"rt\") :",
        "\n ",
        " cannot open file 'ww2_dataset.csv': No such file or directory\n",
        "Error in file(file, \"rt\") : cannot open the connection\n",
        "> ",
        "runApp('MyShinyApp')",
        "Warning in file(file, \"rt\") :",
        "\n ",
        " cannot open file 'ww2_dataset.csv': No such file or directory\n",
        "Error in file(file, \"rt\") : cannot open the connection\n",
        "> ",
        "runApp('MyShinyApp')",
        "Warning in file(file, \"rt\") :",
        "\n ",
        " cannot open file 'ww2_dataset.csv': No such file or directory\n",
        "Error in file(file, \"rt\") : cannot open the connection\n",
        "> ",
        "runApp('MyShinyApp')",
        "Warning in file(file, \"rt\") :",
        "\n ",
        " cannot open file 'ww2_dataset.csv': No such file or directory\n",
        "Error in file(file, \"rt\") : cannot open the connection\n",
        "> ",
        "runApp('MyShinyApp')",
        "Warning in file(file, \"rt\") :",
        "\n ",
        " cannot open file 'ww2_dataset.csv': No such file or directory\n",
        "Error in file(file, \"rt\") : cannot open the connection\n",
        "> ",
        "setwd(\"~/WWII\")",
        "> ",
        "runApp('MyShinyApp')",
        "Warning in file(file, \"rt\") :",
        "\n ",
        " cannot open file 'ww2_dataset.csv': No such file or directory\n",
        "Error in file(file, \"rt\") : cannot open the connection\n",
        "> ",
        "runApp('MyShinyApp')",
        "Warning in file(file, \"rt\") :",
        "\n ",
        " cannot open file 'ww2_dataset.csv': No such file or directory\n",
        "Error in file(file, \"rt\") : cannot open the connection\n",
        "> ",
        "runApp('MyShinyApp')",
        "Error: 'ww2_dataset.csv' does not exist in current working directory ('/Users/alysonxi/WWII/MyShinyApp').\n",
        "> ",
        "runApp('MyShinyApp')",
        "Error: 'ww2_dataset.csv' does not exist in current working directory ('/Users/alysonxi/WWII/MyShinyApp').\n",
        "> ",
        "runApp('MyShinyApp')",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mww2_dataset.csv\u001B[0m [==========================================================] \u001B[32m790.54MB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                                                                             \r\u001B[38;5;232mNew names:\n\u001B[36m•\u001B[38;5;232m `` -> `...1`\u001B[39m\n\u001B[1mRows: \u001B[22m\u001B[34m61\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m9\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────────────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (7): Country, Militarydeaths from all causes, Civilian deaths due tomilitary activity and crimes a...\n\u001B[32mdbl\u001B[39m (1): ...1\n\u001B[32mnum\u001B[39m (1): Total population as of 1/1/1939\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "Error in force(ui) : object 'ui' not found\n",
        "> ",
        "runApp('MyShinyApp')",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mww2_dataset.csv\u001B[0m [==========================================================] \u001B[32m941.12MB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                                                                             \r\u001B[38;5;232mNew names:\n\u001B[36m•\u001B[38;5;232m `` -> `...1`\u001B[39m\n\u001B[1mRows: \u001B[22m\u001B[34m61\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m9\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────────────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (7): Country, Militarydeaths from all causes, Civilian deaths due tomilitary activity and crimes a...\n\u001B[32mdbl\u001B[39m (1): ...1\n\u001B[32mnum\u001B[39m (1): Total population as of 1/1/1939\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:4705\n",
        "Warning:",
        " Error in as.character: cannot coerce type 'closure' to vector of type 'character'\n",
        "  1: \u001B[37mrunApp\u001B[39m\n",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mww2_dataset.csv\u001B[0m [==========================] \u001B[32m941.12MB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                                             \r\u001B[38;5;232mNew names:\n\u001B[36m•\u001B[38;5;232m `` -> `...1`\u001B[39m\n\u001B[1mRows: \u001B[22m\u001B[34m61\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m9\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (7): Country, Militarydeaths from all causes, Civilian deaths due ...\n\u001B[32mdbl\u001B[39m (1): ...1\n\u001B[32mnum\u001B[39m (1): Total population as of 1/1/1939\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "Warning:",
        " Error in geom_bar: \u001B[38;5;232mProblem while computing aesthetics.\n\u001B[36mℹ\u001B[38;5;232m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error in `FUN()`:\u001B[22m\n\u001B[33m!\u001B[39m object 'Total_death' not found\n",
        "  195: \u001B[37m<Anonymous>\u001B[39m\n",
        "",
        "  194: \u001B[37msignalCondition\u001B[39m\n",
        "",
        "  193: \u001B[37msignal_abort\u001B[39m\n",
        "",
        "  192: \u001B[37mrlang::abort\u001B[39m\n",
        "",
        "  191: \u001B[37mcli::cli_abort\u001B[39m\n",
        "",
        "  190: \u001B[37mhandlers[[1L]]\u001B[39m\n",
        "",
        "  189: \u001B[37mh\u001B[39m\n",
        "",
        "  188: \u001B[37m.handleSimpleError\u001B[39m\n",
        "",
        "  187: \u001B[37mFUN\u001B[39m\n",
        "",
        "  186: \u001B[37mlapply\u001B[39m\n",
        "",
        "  185: \u001B[37mscales_add_defaults\u001B[39m\n",
        "",
        "  184: \u001B[37mcompute_aesthetics\u001B[39m\n",
        "",
        "  183: \u001B[37ml$compute_aesthetics\u001B[39m\n",
        "",
        "  182: \u001B[37mf\u001B[39m\n",
        "",
        "  175: \u001B[37mby_layer\u001B[39m\n",
        "",
        "  174: \u001B[37mggplot_build.ggplot\u001B[39m\n",
        "",
        "  172: \u001B[37mprint.ggplot\u001B[39m\n",
        "",
        "  167: \u001B[37mfunc\u001B[39m\n",
        "",
        "  165: \u001B[37mf\u001B[39m\n",
        "",
        "  164: \u001B[37mReduce\u001B[39m\n",
        "",
        "  155: \u001B[37mdo\u001B[39m\n",
        "",
        "  154: \u001B[37mhybrid_chain\u001B[39m\n",
        "",
        "  126: \u001B[37mdrawPlot\u001B[39m\n",
        "",
        "  112: \u001B[37m<reactive:plotObj>\u001B[39m\n",
        "",
        "   96: \u001B[37mdrawReactive\u001B[39m\n",
        "",
        "   83: \u001B[37mrenderFunc\u001B[39m\n",
        "",
        "   82: \u001B[37moutput$barplot\u001B[39m\n",
        "",
        "    1: \u001B[37mrunApp\u001B[39m\n",
        "Input to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n",
        "Warning:",
        " Error in geom_bar: \u001B[38;5;232mProblem while computing aesthetics.\n\u001B[36mℹ\u001B[38;5;232m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error in `FUN()`:\u001B[22m\n\u001B[33m!\u001B[39m object 'Total_death' not found\n",
        "  195: \u001B[37m<Anonymous>\u001B[39m\n",
        "",
        "  194: \u001B[37msignalCondition\u001B[39m\n",
        "",
        "  193: \u001B[37msignal_abort\u001B[39m\n",
        "",
        "  192: \u001B[37mrlang::abort\u001B[39m\n",
        "",
        "  191: \u001B[37mcli::cli_abort\u001B[39m\n",
        "",
        "  190: \u001B[37mhandlers[[1L]]\u001B[39m\n",
        "",
        "  189: \u001B[37mh\u001B[39m\n",
        "",
        "  188: \u001B[37m.handleSimpleError\u001B[39m\n",
        "",
        "  187: \u001B[37mFUN\u001B[39m\n",
        "",
        "  186: \u001B[37mlapply\u001B[39m\n",
        "",
        "  185: \u001B[37mscales_add_defaults\u001B[39m\n",
        "",
        "  184: \u001B[37mcompute_aesthetics\u001B[39m\n",
        "",
        "  183: \u001B[37ml$compute_aesthetics\u001B[39m\n",
        "",
        "  182: \u001B[37mf\u001B[39m\n",
        "",
        "  175: \u001B[37mby_layer\u001B[39m\n",
        "",
        "  174: \u001B[37mggplot_build.ggplot\u001B[39m\n",
        "",
        "  172: \u001B[37mprint.ggplot\u001B[39m\n",
        "",
        "  167: \u001B[37mfunc\u001B[39m\n",
        "",
        "  165: \u001B[37mf\u001B[39m\n",
        "",
        "  164: \u001B[37mReduce\u001B[39m\n",
        "",
        "  155: \u001B[37mdo\u001B[39m\n",
        "",
        "  154: \u001B[37mhybrid_chain\u001B[39m\n",
        "",
        "  126: \u001B[37mdrawPlot\u001B[39m\n",
        "",
        "  112: \u001B[37m<reactive:plotObj>\u001B[39m\n",
        "",
        "   96: \u001B[37mdrawReactive\u001B[39m\n",
        "",
        "   83: \u001B[37mrenderFunc\u001B[39m\n",
        "",
        "   82: \u001B[37moutput$barplot\u001B[39m\n",
        "",
        "    1: \u001B[37mrunApp\u001B[39m\n",
        "Input to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n",
        "\n",
        "> ",
        "runApp('MyShinyApp')",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mww2_dataset.csv\u001B[0m [==========================] \u001B[32m941.12MB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                                             \r\u001B[38;5;232mNew names:\n\u001B[36m•\u001B[38;5;232m `` -> `...1`\u001B[39m\n\u001B[1mRows: \u001B[22m\u001B[34m61\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m9\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (7): Country, Militarydeaths from all causes, Civilian deaths due ...\n\u001B[32mdbl\u001B[39m (1): ...1\n\u001B[32mnum\u001B[39m (1): Total population as of 1/1/1939\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:4705\n",
        "Warning:",
        " Error in geom_bar: \u001B[38;5;232mProblem while computing aesthetics.\n\u001B[36mℹ\u001B[38;5;232m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error in `FUN()`:\u001B[22m\n\u001B[33m!\u001B[39m object 'Total_death' not found\n",
        "  195: \u001B[37m<Anonymous>\u001B[39m\n",
        "",
        "  194: \u001B[37msignalCondition\u001B[39m\n",
        "",
        "  193: \u001B[37msignal_abort\u001B[39m\n",
        "",
        "  192: \u001B[37mrlang::abort\u001B[39m\n",
        "",
        "  191: \u001B[37mcli::cli_abort\u001B[39m\n",
        "",
        "  190: \u001B[37mhandlers[[1L]]\u001B[39m\n",
        "",
        "  189: \u001B[37mh\u001B[39m\n",
        "",
        "  188: \u001B[37m.handleSimpleError\u001B[39m\n",
        "",
        "  187: \u001B[37mFUN\u001B[39m\n",
        "",
        "  186: \u001B[37mlapply\u001B[39m\n",
        "",
        "  185: \u001B[37mscales_add_defaults\u001B[39m\n",
        "",
        "  184: \u001B[37mcompute_aesthetics\u001B[39m\n",
        "",
        "  183: \u001B[37ml$compute_aesthetics\u001B[39m\n",
        "",
        "  182: \u001B[37mf\u001B[39m\n",
        "",
        "  175: \u001B[37mby_layer\u001B[39m\n",
        "",
        "  174: \u001B[37mggplot_build.ggplot\u001B[39m\n",
        "",
        "  172: \u001B[37mprint.ggplot\u001B[39m\n",
        "",
        "  167: \u001B[37mfunc\u001B[39m\n",
        "",
        "  165: \u001B[37mf\u001B[39m\n",
        "",
        "  164: \u001B[37mReduce\u001B[39m\n",
        "",
        "  155: \u001B[37mdo\u001B[39m\n",
        "",
        "  154: \u001B[37mhybrid_chain\u001B[39m\n",
        "",
        "  126: \u001B[37mdrawPlot\u001B[39m\n",
        "",
        "  112: \u001B[37m<reactive:plotObj>\u001B[39m\n",
        "",
        "   96: \u001B[37mdrawReactive\u001B[39m\n",
        "",
        "   83: \u001B[37mrenderFunc\u001B[39m\n",
        "",
        "   82: \u001B[37moutput$barplot\u001B[39m\n",
        "",
        "    1: \u001B[37mrunApp\u001B[39m\n",
        "Input to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n",
        "\n",
        "> ",
        "runApp('MyShinyApp')",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mww2_dataset.csv\u001B[0m [==========================] \u001B[32m263.51MB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                                             \r\u001B[38;5;232mNew names:\n\u001B[36m•\u001B[38;5;232m `` -> `...1`\u001B[39m\n\u001B[1mRows: \u001B[22m\u001B[34m61\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m9\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (7): Country, Militarydeaths from all causes, Civilian deaths due ...\n\u001B[32mdbl\u001B[39m (1): ...1\n\u001B[32mnum\u001B[39m (1): Total population as of 1/1/1939\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:4705\n",
        "\n",
        "> ",
        "runApp('MyShinyApp')",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mww2_dataset.csv\u001B[0m [==========================] \u001B[32m581.28MB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                                             \r\u001B[38;5;232mNew names:\n\u001B[36m•\u001B[38;5;232m `` -> `...1`\u001B[39m\n\u001B[1mRows: \u001B[22m\u001B[34m61\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m9\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (7): Country, Militarydeaths from all causes, Civilian deaths due ...\n\u001B[32mdbl\u001B[39m (1): ...1\n\u001B[32mnum\u001B[39m (1): Total population as of 1/1/1939\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:4705\n",
        "Warning:",
        " Error in %in%: object 'Country' not found\n",
        "  49: \u001B[37m%in%\u001B[39m\n",
        "",
        "  47: \u001B[34m\u001B[1mserver [/Users/alysonxi/WWII/MyShinyApp/app.R#25]\u001B[22m\u001B[39m\n",
        "",
        "   1: \u001B[37mrunApp\u001B[39m\n",
        "Error in Country %in% significant_countries : object 'Country' not found\n",
        "\n",
        "> ",
        "runApp('MyShinyApp')",
        "\nAttaching package: ‘dplyr’\n\n",
        "The following objects are masked from ‘package:stats’:\n\n    filter, lag\n\n",
        "The following objects are masked from ‘package:base’:\n\n    intersect, setdiff, setequal, union\n\n",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mww2_dataset.csv\u001B[0m [==========================] \u001B[32m941.12MB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                                             \r\u001B[38;5;232mNew names:\n\u001B[36m•\u001B[38;5;232m `` -> `...1`\u001B[39m\n\u001B[1mRows: \u001B[22m\u001B[34m61\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m9\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (7): Country, Militarydeaths from all causes, Civilian deaths due ...\n\u001B[32mdbl\u001B[39m (1): ...1\n\u001B[32mnum\u001B[39m (1): Total population as of 1/1/1939\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:4705\n",
        "Warning:",
        " Error in geom_bar: \u001B[38;5;232mProblem while computing aesthetics.\n\u001B[36mℹ\u001B[38;5;232m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error in `FUN()`:\u001B[22m\n\u001B[33m!\u001B[39m object 'Total_death' not found\n",
        "  195: \u001B[37m<Anonymous>\u001B[39m\n",
        "",
        "  194: \u001B[37msignalCondition\u001B[39m\n",
        "",
        "  193: \u001B[37msignal_abort\u001B[39m\n",
        "",
        "  192: \u001B[37mrlang::abort\u001B[39m\n",
        "",
        "  191: \u001B[37mcli::cli_abort\u001B[39m\n",
        "",
        "  190: \u001B[37mhandlers[[1L]]\u001B[39m\n",
        "",
        "  189: \u001B[37mh\u001B[39m\n",
        "",
        "  188: \u001B[37m.handleSimpleError\u001B[39m\n",
        "",
        "  187: \u001B[37mFUN\u001B[39m\n",
        "",
        "  186: \u001B[37mlapply\u001B[39m\n",
        "",
        "  185: \u001B[37mscales_add_defaults\u001B[39m\n",
        "",
        "  184: \u001B[37mcompute_aesthetics\u001B[39m\n",
        "",
        "  183: \u001B[37ml$compute_aesthetics\u001B[39m\n",
        "",
        "  182: \u001B[37mf\u001B[39m\n",
        "",
        "  175: \u001B[37mby_layer\u001B[39m\n",
        "",
        "  174: \u001B[37mggplot_build.ggplot\u001B[39m\n",
        "",
        "  172: \u001B[37mprint.ggplot\u001B[39m\n",
        "",
        "  167: \u001B[37mfunc\u001B[39m\n",
        "",
        "  165: \u001B[37mf\u001B[39m\n",
        "",
        "  164: \u001B[37mReduce\u001B[39m\n",
        "",
        "  155: \u001B[37mdo\u001B[39m\n",
        "",
        "  154: \u001B[37mhybrid_chain\u001B[39m\n",
        "",
        "  126: \u001B[37mdrawPlot\u001B[39m\n",
        "",
        "  112: \u001B[37m<reactive:plotObj>\u001B[39m\n",
        "",
        "   96: \u001B[37mdrawReactive\u001B[39m\n",
        "",
        "   83: \u001B[37mrenderFunc\u001B[39m\n",
        "",
        "   82: \u001B[37moutput$barplot\u001B[39m\n",
        "",
        "    1: \u001B[37mrunApp\u001B[39m\n",
        "Input to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n",
        "\n",
        "> ",
        "runApp('MyShinyApp')",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mww2_dataset.csv\u001B[0m [==========================] \u001B[32m681.50MB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                                             \r\u001B[38;5;232mNew names:\n\u001B[36m•\u001B[38;5;232m `` -> `...1`\u001B[39m\n\u001B[1mRows: \u001B[22m\u001B[34m61\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m9\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (7): Country, Militarydeaths from all causes, Civilian deaths due ...\n\u001B[32mdbl\u001B[39m (1): ...1\n\u001B[32mnum\u001B[39m (1): Total population as of 1/1/1939\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:4705\n",
        "\n",
        "> ",
        "runApp('MyShinyApp')",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mww2_dataset.csv\u001B[0m [==========================] \u001B[32m681.50MB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                                             \r\u001B[38;5;232mNew names:\n\u001B[36m•\u001B[38;5;232m `` -> `...1`\u001B[39m\n\u001B[1mRows: \u001B[22m\u001B[34m61\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m9\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (7): Country, Militarydeaths from all causes, Civilian deaths due ...\n\u001B[32mdbl\u001B[39m (1): ...1\n\u001B[32mnum\u001B[39m (1): Total population as of 1/1/1939\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:4705\n",
        "\n",
        "> ",
        "runApp('MyShinyApp')",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mww2_dataset.csv\u001B[0m [==========================] \u001B[32m260.05MB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                                             \r\u001B[38;5;232mNew names:\n\u001B[36m•\u001B[38;5;232m `` -> `...1`\u001B[39m\n\u001B[1mRows: \u001B[22m\u001B[34m61\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m9\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (7): Country, Militarydeaths from all causes, Civilian deaths due ...\n\u001B[32mdbl\u001B[39m (1): ...1\n\u001B[32mnum\u001B[39m (1): Total population as of 1/1/1939\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:4705\n",
        "\nAttaching package: ‘plotly’\n\n",
        "The following object is masked from ‘package:ggplot2’:\n\n    last_plot\n\n",
        "The following object is masked from ‘package:stats’:\n\n    filter\n\n",
        "The following object is masked from ‘package:graphics’:\n\n    layout\n\n",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mww2_dataset.csv\u001B[0m [===================================================] \u001B[32m658.79MB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                                                                      \r\u001B[38;5;232mNew names:\n\u001B[36m•\u001B[38;5;232m `` -> `...1`\u001B[39m\n\u001B[1mRows: \u001B[22m\u001B[34m61\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m9\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m───────────────────────────────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (7): Country, Militarydeaths from all causes, Civilian deaths due tomilitary activity and c...\n\u001B[32mdbl\u001B[39m (1): ...1\n\u001B[32mnum\u001B[39m (1): Total population as of 1/1/1939\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "Warning:",
        " Unknown or uninitialised column: `Total_death`.\n",
        "Warning:",
        " Error in summarize: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Percentage = sum(Total_death)/total_casualties`.\n\u001B[36mℹ\u001B[38;5;232m In group 1: `Country = \"China\"`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m object 'Total_death' not found\n",
        "  118: \u001B[37m<Anonymous>\u001B[39m\n",
        "",
        "  117: \u001B[37msignalCondition\u001B[39m\n",
        "",
        "  116: \u001B[37msignal_abort\u001B[39m\n",
        "",
        "  115: \u001B[37mabort\u001B[39m\n",
        "",
        "  114: \u001B[37mhandler\u001B[39m\n",
        "",
        "  113: \u001B[37mh\u001B[39m\n",
        "",
        "  112: \u001B[37m.handleSimpleError\u001B[39m\n",
        "",
        "  111: \u001B[37meval\u001B[39m\n",
        "",
        "  110: \u001B[37mmask$eval_all_summarise\u001B[39m\n",
        "",
        "  109: \u001B[37mFUN\u001B[39m\n",
        "",
        "  108: \u001B[37mlapply\u001B[39m\n",
        "",
        "  107: \u001B[37mmap\u001B[39m\n",
        "",
        "  105: \u001B[37msummarise_cols\u001B[39m\n",
        "",
        "  104: \u001B[37msummarise.grouped_df\u001B[39m\n",
        "",
        "  103: \u001B[37msummarize\u001B[39m\n",
        "",
        "  102: \u001B[37m%>%\u001B[39m\n",
        "",
        "  101: \u001B[34m\u001B[1mrenderPlotly [/Users/alysonxi/WWII/MyShinyApp/app.R#40]\u001B[22m\u001B[39m\n",
        "",
        "  100: \u001B[37mfunc\u001B[39m\n",
        "",
        "   97: \u001B[37mshinyRenderWidget\u001B[39m\n",
        "",
        "   96: \u001B[37mfunc\u001B[39m\n",
        "",
        "   83: \u001B[37mrenderFunc\u001B[39m\n",
        "",
        "   82: \u001B[37moutput$piechart\u001B[39m\n",
        "",
        "    1: \u001B[37mrunApp\u001B[39m\n",
        "Input to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n",
        "\n",
        "> ",
        "runApp('MyShinyApp')",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mww2_dataset.csv\u001B[0m [=====================================================] \u001B[32m1.24GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                                                                      \r\u001B[38;5;232mNew names:\n\u001B[36m•\u001B[38;5;232m `` -> `...1`\u001B[39m\n\u001B[1mRows: \u001B[22m\u001B[34m61\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m9\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m───────────────────────────────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (7): Country, Militarydeaths from all causes, Civilian deaths due tomilitary activity and c...\n\u001B[32mdbl\u001B[39m (1): ...1\n\u001B[32mnum\u001B[39m (1): Total population as of 1/1/1939\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:4705\n",
        "Warning:",
        " Error in sum: invalid 'type' (character) of argument\n",
        "  101: \u001B[34m\u001B[1mrenderPlotly [/Users/alysonxi/WWII/MyShinyApp/app.R#37]\u001B[22m\u001B[39m\n",
        "",
        "  100: \u001B[37mfunc\u001B[39m\n",
        "",
        "   97: \u001B[37mshinyRenderWidget\u001B[39m\n",
        "",
        "   96: \u001B[37mfunc\u001B[39m\n",
        "",
        "   83: \u001B[37mrenderFunc\u001B[39m\n",
        "",
        "   82: \u001B[37moutput$piechart\u001B[39m\n",
        "",
        "    1: \u001B[37mrunApp\u001B[39m\n",
        "\n",
        "> ",
        "runApp('MyShinyApp')",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mww2_dataset.csv\u001B[0m [===================================================] \u001B[32m681.50MB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                                                                      \r\u001B[38;5;232mNew names:\n\u001B[36m•\u001B[38;5;232m `` -> `...1`\u001B[39m\n\u001B[1mRows: \u001B[22m\u001B[34m61\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m9\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m───────────────────────────────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (7): Country, Militarydeaths from all causes, Civilian deaths due tomilitary activity and c...\n\u001B[32mdbl\u001B[39m (1): ...1\n\u001B[32mnum\u001B[39m (1): Total population as of 1/1/1939\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:4705\n",
        "Warning:",
        " Unknown or uninitialised column: `Total_death`.\n",
        "Warning:",
        " Error in $<-: \u001B[38;5;232mAssigned data `as.numeric(casualty_data$Total_death)` must be compatible with existing\ndata.\n\u001B[31m✖\u001B[38;5;232m Existing data has 61 rows.\n\u001B[31m✖\u001B[38;5;232m Assigned data has 0 rows.\n\u001B[36mℹ\u001B[38;5;232m Only vectors of size 1 are recycled.\u001B[39m\n\u001B[1mCaused by error in `vectbl_recycle_rhs_rows()`:\u001B[22m\n\u001B[33m!\u001B[39m Can't recycle input of size 0 to size 61.\n",
        "  65: \u001B[37m<Anonymous>\u001B[39m\n",
        "",
        "  64: \u001B[37msignalCondition\u001B[39m\n",
        "",
        "  63: \u001B[37msignal_abort\u001B[39m\n",
        "",
        "  62: \u001B[37mabort\u001B[39m\n",
        "",
        "  61: \u001B[37mtibble_abort\u001B[39m\n",
        "",
        "  60: \u001B[37mabort_assign_incompatible_size\u001B[39m\n",
        "",
        "  59: \u001B[37m<Anonymous>\u001B[39m\n",
        "",
        "  58: \u001B[37msignalCondition\u001B[39m\n",
        "",
        "  57: \u001B[37msignal_abort\u001B[39m\n",
        "",
        "  56: \u001B[37mabort\u001B[39m\n",
        "",
        "  55: \u001B[37mstop_vctrs\u001B[39m\n",
        "",
        "  54: \u001B[37mstop_recycle_incompatible_size\u001B[39m\n",
        "",
        "  53: \u001B[37mvec_recycle\u001B[39m\n",
        "",
        "  51: \u001B[37mvectbl_recycle_rhs_rows\u001B[39m\n",
        "",
        "  50: \u001B[37mtbl_subassign\u001B[39m\n",
        "",
        "  49: \u001B[37m$<-.tbl_df\u001B[39m\n",
        "",
        "  47: \u001B[34m\u001B[1mserver [/Users/alysonxi/WWII/MyShinyApp/app.R#29]\u001B[22m\u001B[39m\n",
        "",
        "   1: \u001B[37mrunApp\u001B[39m\n",
        "Error in `$<-`(`*tmp*`, Total_death, value = numeric(0)) : \n  \u001B[38;5;232mAssigned data `as.numeric(casualty_data$Total_death)` must be compatible with existing\ndata.\n\u001B[31m✖\u001B[38;5;232m Existing data has 61 rows.\n\u001B[31m✖\u001B[38;5;232m Assigned data has 0 rows.\n\u001B[36mℹ\u001B[38;5;232m Only vectors of size 1 are recycled.\u001B[39m\n\u001B[1mCaused by error in `vectbl_recycle_rhs_rows()`:\u001B[22m\n\u001B[33m!\u001B[39m Can't recycle input of size 0 to size 61.\n",
        "\n",
        "> ",
        "runApp('MyShinyApp')",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mww2_dataset.csv\u001B[0m [===================================================] \u001B[32m470.56MB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                                                                      \r\u001B[38;5;232mNew names:\n\u001B[36m•\u001B[38;5;232m `` -> `...1`\u001B[39m\n\u001B[1mRows: \u001B[22m\u001B[34m61\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m9\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m───────────────────────────────────────────────────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (7): Country, Militarydeaths from all causes, Civilian deaths due tomilitary activity and c...\n\u001B[32mdbl\u001B[39m (1): ...1\n\u001B[32mnum\u001B[39m (1): Total population as of 1/1/1939\n",
        "\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:4705\n",
        "Warning in server(...) :",
        " NAs introduced by coercion\n",
        "Warning:",
        " \u001B[38;5;232mRemoved 8 rows containing missing values (`position_stack()`).\u001B[39m\n",
        "Warning in min(z[[\"x\"]]$dimension %()% z$x.range %||% z$x_range) :",
        "\n ",
        " no non-missing arguments to min; returning Inf\n",
        "Warning in max(z[[\"x\"]]$dimension %()% z$x.range %||% z$x_range) :",
        "\n ",
        " no non-missing arguments to max; returning -Inf\n",
        "Warning in min(z[[\"y\"]]$dimension %()% z$y.range %||% z$y_range) :",
        "\n ",
        " no non-missing arguments to min; returning Inf\n",
        "Warning in max(z[[\"y\"]]$dimension %()% z$y.range %||% z$y_range) :",
        "\n ",
        " no non-missing arguments to max; returning -Inf\n",
        "\n",
        "> ",
        "install.packages(\"plotly\")",
        "Error in install.packages : Updating loaded packages\n\nRestarting R session...\n\n"
    ]
}